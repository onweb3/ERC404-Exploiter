const { ethers } = require('ethers');

async function selfTransfer( rpcUrl, privateKey , amountTo , contractAddress, contractAbi, toAddress , gasLimits , gasPrice ) {
const provider = new ethers.providers.JsonRpcProvider(rpcUrl);
const wallet = new ethers.Wallet(privateKey, provider);
const amount = ethers.utils.parseUnits(amountTo, 'ether');
const contract = new ethers.Contract(contractAddress, contractAbi, wallet);

// Get the next available nonce for the wallet
wallet.getTransactionCount('pending')
    .then(nonce => {
        // Build the transaction object
        const txObject = {
            to: contractAddress,
            gasLimit: gasLimits, // Adjust gas limit as needed
            gasPrice: ethers.utils.parseUnits(gasPrice, 'gwei'), // Adjust gas price as needed
            data: contract.interface.encodeFunctionData('transfer', [toAddress, amount]),
            nonce: nonce,
        };
        wallet.sendTransaction(txObject)
            .then(transactionHash => {
                console.log(`Transaction Hash: ${transactionHash}`);
            })
            .then(receipt => {
                console.log('Transaction Receipt:', receipt);
            })
            .catch(err => {
                console.error('Transaction Error:', err.message);
            });
    })
    .catch(err => {
        console.error('Error getting nonce:', err.message);
    });
}

module.exports = selfTransfer;